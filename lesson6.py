# # 1) Дан список словарей persons в формате [{"name": "John", "age": 15}, ... ,{"name": "Jack", "age": 45}]
# # а) Напечатать имя самого молодого человека. Если возраст совпадает - напечатать все имена самых молодых.
# # б) Напечатать самое длинное имя. Если длина имени совпадает - напечатать все имена.
# # в) Посчитать среднее количество лет всех людей из списка.
# # Это одно задание. При выполнении пунктов можно использовать объекты полученные в предыдущих пунктах.
#
# persons = [
#     {"name": "John", "age": 15},
#     {"name": "Michael", "age": 17},
#     {"name": "Adam", "age": 42},
#     {"name": "John", "age": 18},
#     {"name": "Lina", "age": 32},
#     {"name": "Aaron", "age": 25},
#     {"name": "Noa", "age": 15},
#     {"name": "Jack", "age": 45}
# ]
# min_age = 0
# max_name = 0
# # middle_age = 0
# # # отсортировать спис
# age_min = persons[0]["age"]
# #names_min = [persons[0]["name"]]
#
# for dictionary in persons:
#     if dictionary["age"] < age_min:
#         age_min = dictionary["age"]

# 2) Даны два словаря my_dict_1 и my_dict_2.
# а) Создать список из ключей, которые есть в обоих словарях.
# б) Создать список из ключей, которые есть в первом, но нет во втором словаре.
# в) Создать новый словарь из пар {ключ:значение}, для ключей, которые есть в первом, но нет во втором словаре.
# г) Объединить эти два словаря в новый словарь по правилу:
# если ключ есть только в одном из двух словарей - поместить пару ключ:значение,
# если ключ есть в двух словарях - поместить пару {ключ: [значение_из_первого_словаря, значение_из_второго_словаря]},
# {1:1, 2:2}, {11:11, 2:22} ---> {1:1, 11:11, 2:[2, 22]}
# Это одно задание. При выполнении пунктов можно использовать объекты полученные в предыдущих пунктах.

my_dict_1 = {'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5}
my_dict_2 = {'six': 6, 'seven': 7, 'eight': 8, 'nine': 9, 'one': 5, 'ten': 10, 'five': 6}

# а) Создать список из ключей, которые есть в обоих словарях.
my_list_key = list(my_dict_1.keys()) + list(my_dict_2.keys())
print(my_list_key)
# если нужно, чтоб ключи, которые есть в обоих словарях, не повторялись, тогда:
# my_list_key_set = list(set(list(my_dict_1.keys()) + list(my_dict_2.keys())))
# print(my_list_key_set)

# б) Создать список из ключей, которые есть в первом, но нет во втором словаре.
set_keys = list(set(d1.keys()) - set(d2.keys()))
print(set_keys)
# в) Создать новый словарь из пар {ключ:значение}, для ключей, которые есть в первом, но нет во втором словаре.
# d3 = {}
# d3 = dict((key, d1[key]) for key in d1 if key not in d2)
# print(d3)
d3 = {}
for item in d1.items():
    if item[0] not in d2:
        d3[item[0]] = item[1]
print(d3)
# г) Объединить эти два словаря в новый словарь по правилу:
# если ключ есть только в одном из двух словарей - поместить пару ключ:значение,
# если ключ есть в двух словарях - поместить пару {ключ: [значение_из_первого_словаря, значение_из_второго_словаря]},
# {1:1, 2:2}, {11:11, 2:22} ---> {1:1, 11:11, 2:[2, 22]}


# 3. Написать функцию которой передается один параметр - список строк my_list.
# Функция возвращает новый список в котором содержатся
# элементы из my_list по следующему правилу:
# Если строка стоит на нечетном месте в my_list, то ее заменить на
# перевернутую строку. "qwe" на "ewq".
# Если на четном - оставить без изменения.

my_list = ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten']
def my_function(my_list):
    new_list = []
    for index in range(len(my_list)):
        if index % 2:
            new_list.append(my_list[index][::-1])
        else:
            new_list.append(my_list[index])
    return new_list
new_list = my_function(my_list)
print(new_list)

# в одну строку:
# new_list = [my_list[index][::-1] if index % 2 else my_list[index] for index in range(len(my_list))]










